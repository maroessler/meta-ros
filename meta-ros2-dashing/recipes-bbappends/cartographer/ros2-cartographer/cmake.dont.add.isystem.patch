diff -uNr cartographer-release-release-melodic-cartographer-1.0.0-0/cmake/functions.cmake cartographer-release-release-melodic-cartographer-1.0.0-0.new/cmake/functions.cmake
--- cartographer-release-release-melodic-cartographer-1.0.0-0/cmake/functions.cmake	2018-06-01 12:10:29.000000000 +0000
+++ cartographer-release-release-melodic-cartographer-1.0.0-0.new/cmake/functions.cmake	2019-09-07 20:28:53.786899683 +0000
@@ -37,7 +37,7 @@
   _common_compile_stuff("PRIVATE")
 
   # Make sure that gmock always includes the correct gtest/gtest.h.
-  target_include_directories("${NAME}" SYSTEM PRIVATE
+  target_include_directories("${NAME}" PRIVATE
     "${GMOCK_INCLUDE_DIRS}")
   target_link_libraries("${NAME}" PUBLIC ${GMOCK_LIBRARIES})
 
@@ -83,7 +83,6 @@
   google_add_flag(GOOG_CXX_FLAGS "-Werror=reorder")
   google_add_flag(GOOG_CXX_FLAGS "-Werror=return-type")
   google_add_flag(GOOG_CXX_FLAGS "-Werror=switch")
-  google_add_flag(GOOG_CXX_FLAGS "-Werror=uninitialized")
 
   if(NOT CMAKE_BUILD_TYPE OR CMAKE_BUILD_TYPE STREQUAL "")
     set(CMAKE_BUILD_TYPE Release)
diff -uNr cartographer-release-release-melodic-cartographer-1.0.0-0/CMakeLists.txt cartographer-release-release-melodic-cartographer-1.0.0-0.new/CMakeLists.txt
--- cartographer-release-release-melodic-cartographer-1.0.0-0/CMakeLists.txt	2018-06-01 12:10:29.000000000 +0000
+++ cartographer-release-release-melodic-cartographer-1.0.0-0.new/CMakeLists.txt	2019-09-07 20:32:34.487862766 +0000
@@ -178,6 +178,7 @@
   SRCS
     cartographer/ground_truth/compute_relations_metrics_main.cc
 )
+target_link_libraries(cartographer_compute_relations_metrics PUBLIC -ldl)

 google_binary(cartographer_migrate_serialization_format
   SRCS
@@ -196,19 +198,19 @@
   endif()
 endif()
 
-target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC
+target_include_directories(${PROJECT_NAME} PUBLIC
   "${EIGEN3_INCLUDE_DIR}")
 target_link_libraries(${PROJECT_NAME} PUBLIC ${EIGEN3_LIBRARIES})
 
-target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC
+target_include_directories(${PROJECT_NAME} PUBLIC
   "${CERES_INCLUDE_DIRS}")
 target_link_libraries(${PROJECT_NAME} PUBLIC ${CERES_LIBRARIES})
 
-target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC
+target_include_directories(${PROJECT_NAME} PUBLIC
   "${LUA_INCLUDE_DIR}")
 target_link_libraries(${PROJECT_NAME} PUBLIC ${LUA_LIBRARIES})
 
-target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC
+target_include_directories(${PROJECT_NAME} PUBLIC
   "${Boost_INCLUDE_DIRS}")
 target_link_libraries(${PROJECT_NAME} PUBLIC ${Boost_LIBRARIES})
 
@@ -216,11 +218,11 @@
 target_link_libraries(${PROJECT_NAME} PUBLIC glog)
 target_link_libraries(${PROJECT_NAME} PUBLIC gflags)
 
-target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC
+target_include_directories(${PROJECT_NAME} PUBLIC
   "${CAIRO_INCLUDE_DIRS}")
 target_link_libraries(${PROJECT_NAME} PUBLIC ${CAIRO_LIBRARIES})
 
-target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC
+target_include_directories(${PROJECT_NAME} PUBLIC
   ${PROTOBUF_INCLUDE_DIR})
 # TODO(hrapp): This should not explicitly list pthread and use
 # PROTOBUF_LIBRARIES, but that failed on first try.
@@ -242,7 +244,7 @@
   cartographer_test_library
 )
 add_library(${TEST_LIB} ${TEST_LIBRARY_HDRS} ${TEST_LIBRARY_SRCS})
-target_include_directories(${TEST_LIB} SYSTEM PRIVATE
+target_include_directories(${TEST_LIB} PRIVATE
   "${GMOCK_INCLUDE_DIRS}")
 target_link_libraries(${TEST_LIB} PUBLIC ${GMOCK_LIBRARY})
 target_link_libraries(${TEST_LIB} PUBLIC ${PROJECT_NAME})
@@ -264,7 +263,7 @@
   if(${BUILD_PROMETHEUS})
     target_link_libraries("${TEST_TARGET_NAME}" PUBLIC prometheus-cpp)
   endif()
-  target_link_libraries("${TEST_TARGET_NAME}" PUBLIC ${TEST_LIB})
+  target_link_libraries("${TEST_TARGET_NAME}" PUBLIC ${TEST_LIB} -ldl)
 endforeach()

 # Add the binary directory first, so that port.h is included after it has
